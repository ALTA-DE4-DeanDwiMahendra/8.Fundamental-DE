# -*- coding: utf-8 -*-
"""Fundamental-DE-Part2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K52dYmYdz2RDZnCYO6DCNO3BHRv6xcYl
"""

pip install pandas

import pandas as pd
import sqlite3

# Data awal
data = {
    "employee_id": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    "employee_name": ["John Smith", "Alice Johnson", "Bob Davis", "Emily Wilson", "Michael Lee",
                      "Sarah Brown", "James Clark", "Laura Taylor", "Daniel White", "Olivia Martin"],
    "job_code": [101, 102, 103, 101, 102, 103, 101, 102, 103, 101],
    "job": ["Software Engineer", "Data Analyst", "Data Engineer", "Software Engineer", "Data Analyst",
            "Data Engineer", "Software Engineer", "Data Analyst", "Data Engineer", "Software Engineer"],
    "city_code": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210],
    "city_name": ["New York", "Los Angeles", "Chicago", "Houston", "Miami",
                 "Boston", "San Francisco", "Seattle", "Denver", "Atlanta"],
    "province_code": [301, 302, 303, 304, 305, 306, 307, 308, 309, 310],
    "province_name": ["New York", "California", "Illinois", "Texas", "Florida",
                      "Massachusetts", "California", "Washington", "Colorado", "Georgia"]
}

# Membuat DataFrame
df = pd.DataFrame(data)

# Membuat koneksi ke database SQLite dalam memori
conn = sqlite3.connect(':memory:')

# Menyimpan DataFrame ke tabel SQL
df.to_sql('employees', conn, index=False, if_exists='replace')

# Membuat DataFrame untuk tabel Employees
employees = df[['employee_id', 'employee_name']].drop_duplicates().reset_index(drop=True)

# Membuat DataFrame untuk tabel Jobs
jobs = df[['job_code', 'job']].drop_duplicates().reset_index(drop=True)

# Membuat DataFrame untuk tabel Cities
cities = df[['city_code', 'city_name', 'province_code']].drop_duplicates().reset_index(drop=True)

# Membuat DataFrame untuk tabel Provinces
provinces = df[['province_code', 'province_name']].drop_duplicates().reset_index(drop=True)

# Membuat DataFrame untuk tabel EmployeeJobs
employee_jobs = df[['employee_id', 'job_code', 'city_code']]

# Menyimpan DataFrame ke tabel SQL
employees.to_sql('employees', conn, index=False, if_exists='replace')
jobs.to_sql('jobs', conn, index=False, if_exists='replace')
cities.to_sql('cities', conn, index=False, if_exists='replace')
provinces.to_sql('provinces', conn, index=False, if_exists='replace')
employee_jobs.to_sql('employee_jobs', conn, index=False, if_exists='replace')

# Menjalankan query untuk menampilkan tabel-tabel hasil normalisasi
query_employees = "SELECT * FROM employees"
query_jobs = "SELECT * FROM jobs"
query_cities = "SELECT * FROM cities"
query_provinces = "SELECT * FROM provinces"
query_employee_jobs = "SELECT * FROM employee_jobs"

result_employees = pd.read_sql(query_employees, conn)
result_jobs = pd.read_sql(query_jobs, conn)
result_cities = pd.read_sql(query_cities, conn)
result_provinces = pd.read_sql(query_provinces, conn)
result_employee_jobs = pd.read_sql(query_employee_jobs, conn)

# Menampilkan hasil
print("Employees")
print(result_employees)
print("\nJobs")
print(result_jobs)
print("\nCities")
print(result_cities)
print("\nProvinces")
print(result_provinces)
print("\nEmployeeJobs")
print(result_employee_jobs)

